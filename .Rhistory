#Get a unique list of states.
stateList <- unique(outcomeData$state)
#initialize data frame
ranked <- data.frame(hospital=character(), state=character())
tempranked <- data.frame(hospital="", state="")
for (abbr in stateList) {
## Trim and sort
outcomeTrimmed <- subset(outcomeData, state == abbr)
if (outcome == 'heart attack') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,3)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartAttack,outcomeTrimmed$HospitalName),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(tempranked,ranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(tempranked,ranked)}
}
if (outcome == 'heart failure') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,4)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartFailure,outcomeTrimmed$HospitalName),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(tempranked,ranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(tempranked,ranked)}
}
if (outcome == 'pneumonia') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,5)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$Pneumonia,outcomeTrimmed$HospitalName),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(tempranked,ranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(tempranked,ranked)}
}
} # end loop
return(ranked)
} # End of function.
## Test Values
head(rankall("heart attack", 20), 10)
ranked <- ranked[order(ranked$state),]
################################################################################
##  Function: rankall
################################################################################
rankall <- function(outcome, num= "best") {
##outcome <- "heart attack"
##num <- 5
if (num == "best") {num <- 1}
## Check that outcome is valid
if (outcome != 'heart attack' && outcome != 'heart failure' && outcome != 'pneumonia') {
return(stop("invalid outcome"))
}
## Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeData <- outcomeData[,c(2,7,11,17,23)]
names(outcomeData) <- c("hospital","state","HeartAttack","HeartFailure","Pneumonia")
outcomeData$HeartAttack <- as.numeric(outcomeData$HeartAttack)
outcomeData$HeartFailure <- as.numeric(outcomeData$HeartFailure)
outcomeData$Pneumonia <- as.numeric(outcomeData$Pneumonia)
#Get a unique list of states.
stateList <- unique(outcomeData$state)
#initialize data frame
ranked <- data.frame(hospital=character(), state=character())
tempranked <- data.frame(hospital="", state="")
for (abbr in stateList) {
## Trim and sort
outcomeTrimmed <- subset(outcomeData, state == abbr)
if (outcome == 'heart attack') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,3)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartAttack,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(tempranked,ranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(tempranked,ranked)}
}
if (outcome == 'heart failure') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,4)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartFailure,outcomeTrimmed$HospitalName),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(tempranked,ranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(tempranked,ranked)}
}
if (outcome == 'pneumonia') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,5)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$Pneumonia,outcomeTrimmed$HospitalName),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(tempranked,ranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(tempranked,ranked)}
}
} # end loop
ranked <- ranked[order(ranked$state),]
return(ranked)
} # End of function.
## Test Values
head(rankall("heart attack", 20), 10)
outcome <- "heart attack"
num <- 5
if (num == "best") {num <- 1}
## Check that outcome is valid
if (outcome != 'heart attack' && outcome != 'heart failure' && outcome != 'pneumonia') {
return(stop("invalid outcome"))
}
## Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeData <- outcomeData[,c(2,7,11,17,23)]
names(outcomeData) <- c("hospital","state","HeartAttack","HeartFailure","Pneumonia")
outcomeData$HeartAttack <- as.numeric(outcomeData$HeartAttack)
outcomeData$HeartFailure <- as.numeric(outcomeData$HeartFailure)
outcomeData$Pneumonia <- as.numeric(outcomeData$Pneumonia)
#Get a unique list of states.
stateList <- unique(outcomeData$state)
#initialize data frame
ranked <- data.frame(hospital=character(), state=character())
tempranked <- data.frame(hospital="", state="")
outcome <- "heart attack"
num <- 5
if (num == "best") {num <- 1}
## Check that outcome is valid
if (outcome != 'heart attack' && outcome != 'heart failure' && outcome != 'pneumonia') {
return(stop("invalid outcome"))
}
## Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeData <- outcomeData[,c(2,7,11,17,23)]
names(outcomeData) <- c("hospital","state","HeartAttack","HeartFailure","Pneumonia")
outcomeData$HeartAttack <- as.numeric(outcomeData$HeartAttack)
outcomeData$HeartFailure <- as.numeric(outcomeData$HeartFailure)
outcomeData$Pneumonia <- as.numeric(outcomeData$Pneumonia)
#Get a unique list of states.
stateList <- unique(outcomeData$state)
#initialize data frame
ranked <- data.frame(hospital=character(), state=character())
tempranked <- data.frame(hospital="", state="")
for (abbr in stateList) {
## Trim and sort
outcomeTrimmed <- subset(outcomeData, state == abbr)
if (outcome == 'heart attack') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,3)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartAttack,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(tempranked,ranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(tempranked,ranked)}
}
if (outcome == 'heart failure') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,4)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartFailure,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(tempranked,ranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(tempranked,ranked)}
}
if (outcome == 'pneumonia') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,5)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$Pneumonia,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(tempranked,ranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(tempranked,ranked)}
}
} # end loop
ranked <- ranked[order(ranked$state),]
return(ranked)
tempranked
ranked
rankall <- function(outcome, num= "best") {
outcome <- "heart attack"
num <- 5
if (num == "best") {num <- 1}
## Check that outcome is valid
if (outcome != 'heart attack' && outcome != 'heart failure' && outcome != 'pneumonia') {
return(stop("invalid outcome"))
}
## Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeData <- outcomeData[,c(2,7,11,17,23)]
names(outcomeData) <- c("hospital","state","HeartAttack","HeartFailure","Pneumonia")
outcomeData$HeartAttack <- as.numeric(outcomeData$HeartAttack)
outcomeData$HeartFailure <- as.numeric(outcomeData$HeartFailure)
outcomeData$Pneumonia <- as.numeric(outcomeData$Pneumonia)
#Get a unique list of states.
stateList <- unique(outcomeData$state)
#initialize data frame
ranked <- data.frame(hospital=character(), state=character())
tempranked <- data.frame(hospital="", state="")
for (abbr in stateList) {
## Trim and sort
outcomeTrimmed <- subset(outcomeData, state == abbr)
if (outcome == 'heart attack') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,3)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartAttack,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(ranked,tempranked)}
}
if (outcome == 'heart failure') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,4)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartFailure,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(ranked,tempranked)}
}
if (outcome == 'pneumonia') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,5)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$Pneumonia,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(ranked,tempranked)}
}
} # end loop
ranked <- ranked[order(ranked$state),]
return(ranked)
} # End of function.
## Test Values
head(rankall("heart attack", 20), 10)
outcome <- "heart attack"
num <- 5
if (num == "best") {num <- 1}
## Check that outcome is valid
if (outcome != 'heart attack' && outcome != 'heart failure' && outcome != 'pneumonia') {
return(stop("invalid outcome"))
}
## Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeData <- outcomeData[,c(2,7,11,17,23)]
names(outcomeData) <- c("hospital","state","HeartAttack","HeartFailure","Pneumonia")
outcomeData$HeartAttack <- as.numeric(outcomeData$HeartAttack)
outcomeData$HeartFailure <- as.numeric(outcomeData$HeartFailure)
outcomeData$Pneumonia <- as.numeric(outcomeData$Pneumonia)
#Get a unique list of states.
stateList <- unique(outcomeData$state)
#initialize data frame
ranked <- data.frame(hospital=character(), state=character())
tempranked <- data.frame(hospital="", state="")
for (abbr in stateList) {
## Trim and sort
outcomeTrimmed <- subset(outcomeData, state == abbr)
if (outcome == 'heart attack') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,3)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartAttack,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(ranked,tempranked)}
}
if (outcome == 'heart failure') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,4)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartFailure,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(ranked,tempranked)}
}
if (outcome == 'pneumonia') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,5)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$Pneumonia,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
rbind(ranked,tempranked)}
}
} # end loop
ranked <- ranked[order(ranked$state),]
return(ranked)
tempranked
ranked
testrank <- data.frame(hospital="test1", state="test1state")
newtest <- rbind(ranked,testrank)
newtest
testrank <- data.frame(hospital="test2", state="test2state")
newtest <- rbind(ranked,testrank)
newtest <- rbind(newtest,testrank)
newtest <- rbind(newtest,testrank)
newtest
testrank <- data.frame(hospital="test3", state="test3state")
newtest <- rbind(newtest,testrank)
newtest
################################################################################
##  Function: rankall
################################################################################
rankall <- function(outcome, num= "best") {
outcome <- "heart attack"
num <- 5
if (num == "best") {num <- 1}
## Check that outcome is valid
if (outcome != 'heart attack' && outcome != 'heart failure' && outcome != 'pneumonia') {
return(stop("invalid outcome"))
}
## Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeData <- outcomeData[,c(2,7,11,17,23)]
names(outcomeData) <- c("hospital","state","HeartAttack","HeartFailure","Pneumonia")
outcomeData$HeartAttack <- as.numeric(outcomeData$HeartAttack)
outcomeData$HeartFailure <- as.numeric(outcomeData$HeartFailure)
outcomeData$Pneumonia <- as.numeric(outcomeData$Pneumonia)
#Get a unique list of states.
stateList <- unique(outcomeData$state)
#initialize data frame
ranked <- data.frame(hospital=character(), state=character())
tempranked <- data.frame(hospital="", state="")
#   testrank <- data.frame(hospital="test3", state="test3state")
#   newtest <- rbind(newtest,testrank)
for (abbr in stateList) {
## Trim and sort
outcomeTrimmed <- subset(outcomeData, state == abbr)
if (outcome == 'heart attack') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,3)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartAttack,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)}
}
if (outcome == 'heart failure') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,4)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartFailure,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)}
}
if (outcome == 'pneumonia') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,5)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$Pneumonia,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)}
}
} # end loop
ranked <- ranked[order(ranked$state),]
return(ranked)
} # End of function.
## Test Values
head(rankall("heart attack", 20), 10)
################################################################################
##  Function: rankall
################################################################################
rankall <- function(outcome, num= "best") {
##outcome <- "heart attack"
##num <- 5
if (num == "best") {num <- 1}
## Check that outcome is valid
if (outcome != 'heart attack' && outcome != 'heart failure' && outcome != 'pneumonia') {
return(stop("invalid outcome"))
}
## Read outcome data
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcomeData <- outcomeData[,c(2,7,11,17,23)]
names(outcomeData) <- c("hospital","state","HeartAttack","HeartFailure","Pneumonia")
outcomeData$HeartAttack <- as.numeric(outcomeData$HeartAttack)
outcomeData$HeartFailure <- as.numeric(outcomeData$HeartFailure)
outcomeData$Pneumonia <- as.numeric(outcomeData$Pneumonia)
#Get a unique list of states.
stateList <- unique(outcomeData$state)
#initialize data frame
ranked <- data.frame(hospital=character(), state=character())
tempranked <- data.frame(hospital="", state="")
#   testrank <- data.frame(hospital="test3", state="test3state")
#   newtest <- rbind(newtest,testrank)
for (abbr in stateList) {
## Trim and sort
outcomeTrimmed <- subset(outcomeData, state == abbr)
if (outcome == 'heart attack') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,3)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartAttack,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)}
}
if (outcome == 'heart failure') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,4)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$HeartFailure,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)}
}
if (outcome == 'pneumonia') {
outcomeTrimmed <- outcomeTrimmed[,c(1,2,5)]
outcomeTrimmed <- na.omit(outcomeTrimmed)
outcomeTrimmed <- outcomeTrimmed[order(outcomeTrimmed$Pneumonia,outcomeTrimmed$hospital),]
if (num == "worst") {
lastrow <- nrow(outcomeTrimmed)
tempranked$hospital <- outcomeTrimmed[lastrow,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)
} else {tempranked$hospital <- outcomeTrimmed[num,1]
tempranked$state <- abbr
ranked <- rbind(ranked,tempranked)}
}
} # end loop
ranked <- ranked[order(ranked$state),]
return(ranked)
} # End of function.
## Test Values
head(rankall("heart attack", 20), 10)
# Set Working Directory
setwd("~/GitHub/RProgramming3/")
#  This assignment will be graded using unit tests executed via the submit script that you run on your computer. To obtain the submit script, run the following code in R:
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
#   Or you can download the script to your working directory (NOTE: You may need to rename the script to be "submitscript3.R"). Then source it locally via
#   source("submitscript3.R")
#   The first time you run the submit script it will prompt you for your Submission login and Submission password.
#   These can be found at the top of the Programming Assignments page. To execute the submit script, type
submit()
9
submit()
submit()
